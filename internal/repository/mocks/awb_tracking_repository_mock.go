// Code generated by MockGen. DO NOT EDIT.
// Source: awb_tracking.go

package mocks

import (
	"github.com/google/uuid"
	"github.com/hanifbg/landing_backend/internal/model/entity"
	"github.com/stretchr/testify/mock"
)

// AWBTrackingRepositoryMock is a mock implementation of AWBTrackingRepository
type AWBTrackingRepositoryMock struct {
	mock.Mock
}

// CreateAWBTracking is a mock implementation of AWBTrackingRepository.CreateAWBTracking
func (m *AWBTrackingRepositoryMock) CreateAWBTracking(awbTracking *entity.AWBTracking) error {
	args := m.Called(awbTracking)
	return args.Error(0)
}

// GetAWBTrackingByOrderID is a mock implementation of AWBTrackingRepository.GetAWBTrackingByOrderID
func (m *AWBTrackingRepositoryMock) GetAWBTrackingByOrderID(orderID uuid.UUID) ([]*entity.AWBTracking, error) {
	args := m.Called(orderID)
	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).([]*entity.AWBTracking), args.Error(1)
}

// GetAWBTrackingByAWBNumber is a mock implementation of AWBTrackingRepository.GetAWBTrackingByAWBNumber
func (m *AWBTrackingRepositoryMock) GetAWBTrackingByAWBNumber(awbNumber, courier string) (*entity.AWBTracking, error) {
	args := m.Called(awbNumber, courier)
	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entity.AWBTracking), args.Error(1)
}

// UpdateAWBTracking is a mock implementation of AWBTrackingRepository.UpdateAWBTracking
func (m *AWBTrackingRepositoryMock) UpdateAWBTracking(awbTracking *entity.AWBTracking) error {
	args := m.Called(awbTracking)
	return args.Error(0)
}

// DeleteAWBTracking is a mock implementation of AWBTrackingRepository.DeleteAWBTracking
func (m *AWBTrackingRepositoryMock) DeleteAWBTracking(id uuid.UUID) error {
	args := m.Called(id)
	return args.Error(0)
}

// GetOrderByInvoiceNumber is a mock implementation of AWBTrackingRepository.GetOrderByInvoiceNumber
func (m *AWBTrackingRepositoryMock) GetOrderByInvoiceNumber(invoiceNumber string) (*entity.Order, error) {
	args := m.Called(invoiceNumber)
	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*entity.Order), args.Error(1)
}
